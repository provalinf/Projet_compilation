move $s7, $sp
sw $v0, 0($s7)
sw $v0, -4($s7)
sw $v0, -8($s7)
sw $v0, -12($s7)
addi $sp, $sp, -16
# Fonction addition
fonc_1329552164:

# Sauvegarder adresse de retour
sw $ra, ($sp)
addi $sp, $sp, -4

# Sauvegarder base locale dans la pile
sw $s7, ($sp)
addi $sp, $sp, -4

# Ajout num de bloc
li $v0, 0
sw $v0, ($sp)
addi $sp, $sp, -4

# Déplacement base
move $s7, $sp

# Instructions fonction

# Ecrire une expression
lw $v0,-4($s7)
move $a0, $v0
li $v0, 1
syscall

# Ecrire une expression
lw $v0,-8($s7)
move $a0, $v0
li $v0, 1
syscall

# Ecrire une chaine de caractère
.data
str_363771819 :	.asciiz "10"
.text
li $v0, 4
la $a0, str_363771819
syscall
finfonc_1329552164:
lw $ra, 12($s7)
addi $sp, $s7, 12
lw $s7, 8($s7)
jr $ra
pilefonc_1329552164:
#Appel fonction

# Ranger 4 dans $v0
li $v0, 4
sw $v0, ($sp)
add $sp, $sp, -4

# Ranger 8 dans $v0
li $v0, 8
sw $v0, ($sp)
add $sp, $sp, -4
addi $sp, $sp, -4
jal fonc_1329552164
# Dépile retour 
addi $sp, $sp, 4
lw $v0, 0($sp)
add $sp, $sp, 8

# Affectation
sw $v0, 0($s7)

end:
move $v1, $v0
li $v0,10
syscall